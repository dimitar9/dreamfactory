package org.giddap.dreamfactory.leetcode.onlinejudge;

import org.giddap.dreamfactory.leetcode.onlinejudge.implementations.MultiplyStringsImpl;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

/**
 * input	output	expected
 * "0", "0"	"0"	"0"
 * <p/>
 * "1", "1"	"1"	"1"
 * <p/>
 * "0", "9"	"0"	"0"
 * <p/>
 * "2", "3"	"6"	"6"
 * <p/>
 * "9", "9"	"81"	"81"
 * <p/>
 * "9", "99"	"891"	"891"
 * <p/>
 * "98", "9"	"882"	"882"
 * <p/>
 * "123", "456"	"56088"	"56088"
 * <p/>
 * "999", "999"	"998001"	"998001"
 * <p/>
 * "9133", "0"	"0"	"0"
 * <p/>
 * "123456789", "987654321"	"121932631112635269"	"121932631112635269"
 */
public class MultiplyStringsTest {
    private MultiplyStrings solution = new MultiplyStringsImpl();

    @Test
    public void small01() {
        assertEquals("998001", solution.multiply("999", "999"));
    }

    @Test
    public void small02() {
        assertEquals("121932631112635269", solution.multiply("123456789", "987654321"));
    }

    @Test
    public void small03() {
        assertEquals("" + (5 * 4), solution.multiply("5", "4"));
    }

    @Test
    public void small04() {
        assertEquals("" + (55 * 4), solution.multiply("55", "4"));
    }

    @Test
    public void small05() {
        assertEquals("" + (0 * 0), solution.multiply("0", "0"));
    }

    @Test
    public void small06() {
        assertEquals("882", solution.multiply("98", "9"));
    }

    @Test
    public void large01() {
        assertEquals("67500649338953014190022427720009974152122888684303491539825680400401937831201855940252",
                solution.multiply("7204554941577564438",
                        "9369162965141127216164882458728854782080715827760307787224298083754"));
    }
}

/*
Test cases
Input	 Output	 Expected
"0", "0"	"0"	"0"
"1", "1"	"1"	"1"
"0", "9"	"0"	"0"
"0", "112534"	"0"	"0"
"73765452", "474"	"34964824248"	"34964824248"
"498828660196", "840477629533"	"419254329864656431168468"	"419254329864656431168468"
"93553535314", "25247452591474"	"2361988447605003674312836"	"2361988447605003674312836"
"2795820576851", "95369034579"	"266634709270382745930729"	"266634709270382745930729"
"9333852702227987", "85731737104263"	"800207406037324579815815608581"	"800207406037324579815815608581"
"18582506933032752", "366213329703"	"6805161738175006549873432656"	"6805161738175006549873432656"
"23108814760092", "55183904456427981"	"1275234625822209623419790934252"	"1275234625822209623419790934252"
"930047927929", "7607999646288178"	"7075804306714884864908723362"	"7075804306714884864908723362"
"17849419788197", "877968504004372811"	"15671228388789369086481445511767"	"15671228388789369086481445511767"
"512621602792789759", "73487879881634"	"37671474770767230038449567386206"	"37671474770767230038449567386206"
"162984787668338833", "31422213867905"	"5121342855329628307987043854865"	"5121342855329628307987043854865"
"94584450506", "185419844972871"	"17537834149666710012222726"	"17537834149666710012222726"
"2498002655", "5186493004848"	"12955873296249231871440"	"12955873296249231871440"
"4303607196", "9816352650245"	"42245725904068053163020"	"42245725904068053163020"
"713303953233", "4489481048"	"3202364579503031828184"	"3202364579503031828184"
"23650379502752", "865382861454"	"20466633088564555427721408"	"20466633088564555427721408"
"75381100974831310884300560848", "56984026014719840829581539713658"	"4295518618968010572953196886395461723874498189915154725661984"	"4295518618968010572953196886395461723874498189915154725661984"
"4986379436526147432469958204718329158211863797453691789509292244161982290580525007195048267692", "2044896994719"	"10196632324280939501920935532080047861522469359304809264939236841811532758641815369082380054461517822318548"	"10196632324280939501920935532080047861522469359304809264939236841811532758641815369082380054461517822318548"
"9916221379759361611351233372784697220579564491782019354602972", "342784353038641"	"3399125530248752775975351479466233253815037784637688273028006338778329441052"	"3399125530248752775975351479466233253815037784637688273028006338778329441052"
"23554828732827361759284509563616163578661843591669787", "60216688416795551855414"	"1418393782515648441480508713625392035262011608190030856748726156842256176818"	"1418393782515648441480508713625392035262011608190030856748726156842256176818"
"9369162965141127216164882458728854782080715827760307787224298083754", "7204554941577564438"	"67500649338953014190022427720009974152122888684303491539825680400401937831201855940252"	"67500649338953014190022427720009974152122888684303491539825680400401937831201855940252"
*/